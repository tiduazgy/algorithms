/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> result = new LinkedList<List<Integer>>();
        LinkedList<TreeNode> queue = new LinkedList();
        
        if(root == null)return result;
        
        queue.add(root);
        BFS(root,result,queue);
        return result;
    }
    
    private void BFS(TreeNode root,List result,LinkedList<TreeNode> queue){
        while(!queue.isEmpty()){
            int levelNum = queue.size();
            List<Integer> subList = new LinkedList<Integer>();
            for(int i = 0;i < levelNum;i++){
                if(queue.peek().left != null)queue.add(queue.peek().left);
                if(queue.peek().right != null)queue.add(queue.peek().right);
                subList.add(queue.poll().val);
            }
            result.add(0,subList);//因为result声明为list,即使实际类型是linkedList，仍然不能用addFirst和offerFirst!!!!
        }
        
    }
    
}
