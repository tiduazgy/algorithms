/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    int curElement = 0;
    int curCount = 0;
    int maxCount = 1;
    public int[] findMode(TreeNode root) {
        ArrayList<Integer> result = new ArrayList();
        if(root == null)return new int[0];
        inorder(root,result);
        if(!result.contains(curElement)){
            if(curCount == maxCount)result.add(curElement);
            else if(curCount > maxCount){
                result.clear();
                result.add(curElement);
            }
        }
        int[] answer = new int[result.size()];
        for(int i = 0;i < answer.length;i++){
            answer[i] = result.get(i);
        }
        return answer; 
    }
    
    private void inorder(TreeNode root,ArrayList<Integer> list){
        if(root == null)return;
        inorder(root.left,list);
        if(curElement == root.val){
            curCount++;
        }
        else{
            if(curCount == maxCount){
                list.add(curElement);
                curElement = root.val;
                curCount = 1;
            }
            else if(curCount > maxCount){
                list.clear();
                list.add(curElement);
                maxCount = curCount;
                curElement = root.val;
                curCount = 1;
            }
            else{
                curElement = root.val;
                curCount = 1;
            }
        }
        inorder(root.right,list);
    }
}
